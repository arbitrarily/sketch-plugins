@import "../Libraries/Preferences.cocoascript";
@import "../Libraries/Google_Analytics.cocoascript";

var onRun = function(context) {

    var document = context.document;
    var selection = context.selection;
    if (selection.count() == 0) {
        document.showMessage("Please select at least 1 layer.");
        return;
    }

    // All Export Presets
    var exportPresets = MSExportPreset.allExportPresets();

    // Preferences
    var defaultUserInput = getPreferences(context, "sliceSize") || "0";
    var defaultExportPresetIndex = getPreferences(context, "sliceExportPreset") || 0;

    // Dialog
    var dialog = COSAlertWindow.alloc().init();
    dialog.setMessageText("Auto Slice");
    dialog.setInformativeText("Input the size like 24, 24x24 or 0, use 0 means to fix the layer size.");

    var view = NSView.alloc().initWithFrame(NSMakeRect(0, 0, 300, 24));

    var textField = NSTextField.alloc().initWithFrame(NSMakeRect(0, 0, 170, 24));
    textField.setStringValue(defaultUserInput);
    textField.setPlaceholderString("24, 24x24 or 0")
    view.addSubview(textField);

    var selectBox = NSPopUpButton.alloc().initWithFrame(NSMakeRect(180, 0, 120, 24));
    var loopExportPresets = exportPresets.objectEnumerator();
    var exportPreset;
    while (exportPreset = loopExportPresets.nextObject()) {
        selectBox.addItemWithTitle(exportPreset.name());
    }
    selectBox.selectItemAtIndex(defaultExportPresetIndex);
    view.addSubview(selectBox);

    dialog.addAccessoryView(view);
    dialog.addButtonWithTitle("OK");
    dialog.addButtonWithTitle("Cancel");
    dialog.alert().window().setInitialFirstResponder(textField);

    // Run
    var responseCode = dialog.runModal();
    if (responseCode == 1000) {

        var userInputString = textField.stringValue();
        setPreferences(context, "sliceSize", userInputString);

        var exportPresetIndex = selectBox.indexOfSelectedItem();
        setPreferences(context, "sliceExportPreset", exportPresetIndex);

        // Add Slice
        var loopSelection = selection.objectEnumerator();
        var layer;
        while (layer = loopSelection.nextObject()) {

            var sliceWith = 0,
                sliceHeight = 0;

            if (/^\d+$/.test(userInputString)) {
                if (parseInt(userInputString) > 0) {
                    sliceWith = parseInt(userInputString) * 2 + Math.ceil(layer.frame().width());
                    sliceHeight = parseInt(userInputString) * 2 + Math.ceil(layer.frame().height());
                }
            } else if (/^\d+x\d+$/.test(userInputString)) {
                sliceWith = parseInt(userInputString.match(/\d+/g)[0]);
                sliceHeight = parseInt(userInputString.match(/\d+/g)[1]);
            } else {
                document.showMessage("Bad format.");
                return;
            }

            var midX = layer.frame().midX(),
                midY = layer.frame().midY();

            var slice = MSSliceLayer.sliceLayerFromLayer(layer);

            var msRect = MSRect.rectWithUnionOfRects([
                MSRect.alloc().initWithRect(slice.absoluteRect().rect()),
                MSRect.alloc().initWithRect(layer.absoluteRect().rect())
            ]);
            slice.absoluteRect().setRect(msRect.rect());

            if (sliceWith > 0) {
                slice.frame().setWidth(sliceWith);
                slice.frame().setMidX(midX);
            }
            if (sliceHeight > 0) {
                slice.frame().setHeight(sliceHeight);
                slice.frame().setMidY(midY);
            }

            slice.frame().setX(Math.round(slice.frame().x()));
            slice.frame().setY(Math.round(slice.frame().y()));

            if (
                layer.class() == "MSLayerGroup" ||
                layer.class() == "MSArtboardGroup" ||
                layer.class() == "MSSymbolMaster"
            ) {
                slice.moveToLayer_beforeLayer(layer, layer.firstLayer());
                if (layer.class() == "MSLayerGroup") {
                    slice.exportOptions().setLayerOptions(2);
                }
            } else {
                slice.moveToLayer_beforeLayer(layer.parentGroup(), layer);
            }

            slice.exportOptions().setExportFormats(exportPresets.objectAtIndex(exportPresetIndex).exportFormats());
        }

        document.reloadInspector();

    }

    ga(context, "Slice");

};
